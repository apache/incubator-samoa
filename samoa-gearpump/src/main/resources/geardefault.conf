gearpump {

  serializers {
    ## Follow this format when adding new serializer for new message types
    ##    "org.apache.gearpump.Message" = "org.apache.gearpump.streaming.MessageSerializer"
    "org.apache.samoa.topology.impl.gearpump.GearpumpMessage" = ""
    "org.apache.samoa.utils.PartitioningScheme" = ""
    "org.apache.samoa.core.ContentEvent" = ""
    "org.apache.samoa.core.DoubleVector" = ""
    "org.apache.samoa.moa.classifiers.core.AttributeSplitSuggestion" = ""
    "org.apache.samoa.moa.classifiers.rules.core.attributeclassobservers.FIMTDDNumericAttributeClassLimitObserver" = ""
    "org.apache.samoa.moa.classifiers.rules.core.conditionaltests.NumericAttributeBinaryRulePredicate" = ""
    "org.apache.samoa.moa.classifiers.rules.driftdetection.PageHinkleyFading" = ""
    "org.apache.samoa.learners.classifiers.rules.common.Perceptron$PerceptronData" = ""
    "org.apache.samoa.learners.classifiers.rules.common.TargetMean$TargetMeanData" = ""
    "org.apache.samoa.learners.classifiers.rules.common.TargetMean" = ""
    "org.apache.samoa.learners.classifiers.rules.common.Perceptron" = ""
    "org.apache.samoa.learners.classifiers.trees.AttributeContentEvent" = ""
    "org.apache.samoa.learners.classifiers.trees.ComputeContentEvent" = ""
    "org.apache.samoa.learners.InstanceContentEvent" = ""
    "org.apache.samoa.learners.InstancesContentEvent" = ""
    "org.apache.samoa.learners.clusterers.ClusteringContentEvent" = ""
    "org.apache.samoa.learners.classifiers.trees.DeleteContentEvent" = ""
    "org.apache.samoa.learners.classifiers.trees.LocalResultContentEvent" = ""
    "org.apache.samoa.learners.classifiers.trees.AttributeBatchContentEvent" = ""
    "org.apache.samoa.learners.classifiers.rules.distributed.RuleContentEvent" = ""
    "org.apache.samoa.learners.classifiers.rules.distributed.PredicateContentEvent" = ""
    "org.apache.samoa.learners.classifiers.rules.distributed.AssignmentContentEvent" = ""
    "org.apache.samoa.learners.classifiers.rules.common.ActiveRule" = ""
    "org.apache.samoa.learners.classifiers.rules.common.ActiveRule$Builder" = ""
    "org.apache.samoa.learners.classifiers.rules.common.RuleSplitNode" = ""
    "org.apache.samoa.learners.classifiers.rules.common.RuleActiveRegressionNode" = ""
    "org.apache.samoa.learners.classifiers.rules.common.RulePassiveRegressionNode" = ""
    "org.apache.samoa.learners.ResultContentEvent" = ""
    "org.apache.samoa.evaluation.ClusteringResultContentEvent" = ""
    "org.apache.samoa.evaluation.ClusteringEvaluationContentEvent" = ""
    "org.apache.samoa.core.SerializableInstance" = ""
    "org.apache.samoa.instances.SingleClassInstanceData" = ""
    "org.apache.samoa.instances.DenseInstanceData" = ""
    "org.apache.samoa.instances.SparseInstanceData" = ""
    "org.apache.samoa.instances.InstancesHeader" = ""
    "org.apache.samoa.instances.Instances" = ""
    "org.apache.samoa.instances.InstanceInformation" = ""
    "org.apache.samoa.moa.core.DataPoint" = ""
    "org.apache.samoa.moa.core.FastVector" = ""
    "org.apache.samoa.moa.core.AutoExpandVector" = ""
    "org.apache.samoa.moa.core.DoubleVector" = ""
    "org.apache.samoa.moa.cluster.Clustering" = ""
    "org.apache.samoa.moa.cluster.SphereCluster" = ""
    "org.apache.samoa.moa.clusterers.clustream.ClustreamKernel" = ""
    "org.apache.samoa.instances.Attribute" = ""
    "org.apache.samoa.moa.classifiers.core.conditionaltests.NumericAttributeBinaryTest" = ""
    "org.apache.samoa.moa.classifiers.core.conditionaltests.NominalAttributeMultiwayTest" = ""
    "org.apache.samoa.moa.classifiers.core.conditionaltests.NominalAttributeBinaryTest" = ""
    "org.apache.samoa.moa.classifiers.core.AttributeSplitSuggestion" = ""
    "org.apache.samoa.learners.classifiers.trees.ActiveLearningNode" = ""
    "[Lorg.apache.samoa.learners.classifiers.trees.AttributeBatchContentEvent;" = ""
    "com.github.javacliparser.IntOption" = ""
    "com.github.javacliparser.FloatOption" = ""
    "org.apache.samoa.learners.InstanceContent" = ""
    "java.util.ArrayList" = ""
    "java.util.LinkedList" = ""
    "java.util.HashMap" = ""
    "java.util.Arrays" = ""
    "[[D" = ""
  }
  
}
